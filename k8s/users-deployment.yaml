apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-service
  template:
    metadata:
      labels:
        app: users-service
    spec:
      containers:
        - name: users-service
          image: kashiftaj/users-service:latest
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu:     "100m"
              memory: "128Mi"
            limits:
              cpu:     "500m"
              memory: "256Mi"  
          readinessProbe:
            httpGet:
              path: /health  # Or /health if you have one
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health  # Or /health if you have one
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 20
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER

            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE

            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_HOST

            - name: MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_PORT
---
apiVersion: v1
kind: Service
metadata:
  name: users-service
spec:
  selector:
    app: users-service
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
